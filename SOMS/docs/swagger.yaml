basePath: /
definitions:
  response.CommonResponse:
    properties:
      data: {}
      error: {}
      status:
        type: integer
    type: object
  user.UserLoginRequestBody:
    properties:
      pw:
        type: string
      userID:
        type: string
    type: object
  user.UserRequestBody:
    properties:
      name:
        type: string
      priority:
        type: string
      pw:
        type: string
      role:
        type: string
      spot:
        type: string
      userID:
        type: string
    type: object
  vm.CreateVmBody:
    properties:
      externalIP:
        type: string
      flavorID:
        type: string
      internalIP:
        type: string
      keypair:
        type: string
      name:
        type: string
      selectedOS:
        type: string
      selectedSecuritygroup:
        type: string
      unionmountImage:
        type: string
      userID:
        type: string
    type: object
host: 117.16.136.172:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Cloud Platform API Server
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SOMS API
  version: "1.0"
paths:
  /mockup/200:
    get:
      consumes:
      - application/json
      description: 200 OK 응답을 반환합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 200 OK 응답
      tags:
      - mockup
    post:
      consumes:
      - application/json
      description: 200 OK 응답을 반환합니다.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 200 OK 응답
      tags:
      - mockup
  /mockup/400:
    get:
      consumes:
      - application/json
      description: 40X 에러 응답을 반환합니다.
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 40X 에러 응답
      tags:
      - mockup
    post:
      consumes:
      - application/json
      description: 40X 에러 응답을 반환합니다.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 40X 에러 응답
      tags:
      - mockup
  /mockup/500:
    get:
      consumes:
      - application/json
      description: 50X 에러 응답을 반환합니다.
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 50X 에러 응답
      tags:
      - mockup
    post:
      consumes:
      - application/json
      description: 50X 에러 응답을 반환합니다.
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 50X 에러 응답
      tags:
      - mockup
  /user:
    get:
      consumes:
      - application/json
      description: 사용자의 정보를 전체 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 정보 전체 조회
      tags:
      - user
    post:
      consumes:
      - application/json
      description: 사용자 가입을 진행합니다.
      parameters:
      - description: User Name
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/user.UserRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 가입
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: 사용자의 정보를 삭제합니다.
      parameters:
      - description: User uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 정보 삭제
      tags:
      - user
    get:
      consumes:
      - application/json
      description: 사용자의 정보를 조회합니다.
      parameters:
      - description: User uuid
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 정보 조회
      tags:
      - user
  /user/{userID}:
    patch:
      consumes:
      - application/json
      description: 사용자의 정보를 수정합니다.
      parameters:
      - description: User ID
        in: path
        name: UserID
        required: true
        type: string
      - description: User Name
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/user.UserRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 정보 수정
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: 사용자 로그인을 진행합니다.
      parameters:
      - description: User Login Info
        in: body
        name: UserLogin
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 로그인
      tags:
      - user
  /user/validate/{userID}:
    get:
      consumes:
      - application/json
      description: 사용자 ID의 유효성을 검사합니다.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: 사용자 ID 유효성 검사
      tags:
      - user
  /vm:
    get:
      consumes:
      - application/json
      description: VM의 정보를 전체 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 정보 전체 조회
      tags:
      - vm
    post:
      consumes:
      - application/json
      description: VM을 등록합니다.
      parameters:
      - description: VM 정보
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/vm.CreateVmBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 등록
      tags:
      - vm
  /vm/{id}:
    delete:
      consumes:
      - application/json
      description: VM의 정보를 삭제합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 정보 삭제
      tags:
      - vm
    get:
      consumes:
      - application/json
      description: VM의 정보를 조회합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 정보 조회
      tags:
      - vm
    patch:
      consumes:
      - application/json
      description: VM의 정보를 수정합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      - description: VM 정보
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/vm.CreateVmBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 정보 수정
      tags:
      - vm
  /vm/console/{id}:
    get:
      consumes:
      - application/json
      description: VM의 콘솔을 조회합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 콘솔 조회
      tags:
      - vm
  /vm/reboot/{id}:
    post:
      consumes:
      - application/json
      description: VM을 재부팅합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 재부팅
      tags:
      - vm
  /vm/start/{id}:
    post:
      consumes:
      - application/json
      description: VM을 시작합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 시작
      tags:
      - vm
  /vm/stop/{id}:
    post:
      consumes:
      - application/json
      description: VM을 중지합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 중지
      tags:
      - vm
  /vm/vnc/{id}:
    get:
      consumes:
      - application/json
      description: VM의 VNC를 조회합니다.
      parameters:
      - description: VM uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM VNC 조회
      tags:
      - vm
  /vmstat:
    get:
      consumes:
      - application/json
      description: VM의 상태를 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CommonResponse'
      summary: VM 상태 조회
      tags:
      - vm
swagger: "2.0"
